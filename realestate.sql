use sqlproject;

-- To find all properties handled by specific agtn --------
delimiter //
create procedure agent_handling_properties(in id int)
begin 
select * from property where agent_id=id;
end //
delimiter ;
call agent_handling_properties(4);

-- number of propertied available for sales----
delimiter //
create procedure property_available_ForSale()
begin
select * from property where property_status='available';
end //
delimiter ;
call property_available_ForSale();

-- total amount of transaction handled by each agent ---
delimiter //
create procedure transaction_handled_by_agent()
begin 
SELECT a.agent_id, a.agent_name, SUM(t.amount) AS total_sales
FROM transactions t
JOIN Agent a ON t.agent_id = a.agent_id
GROUP BY a.agent_id, a.agent_name;
end //
delimiter ;
call  transaction_handled_by_agent();

-- adding new property ---
delimiter //
create procedure add_property(own_id int,agnt_id int,address varchar(200),
price decimal(10,2),size decimal(10,2),prop_type varchar(50),prop_status varchar(20))
begin
insert into property(owner_id , agent_id,property_address,property_price, property_size ,property_type ,property_status) 
values(own_id,agnt_id,address,price,size,prop_type,prop_status);
select * from property order by property_id desc limit 1;
end //
delimiter ;
call add_property(2,4,'chennai',400000.4,2345.76,'vila','available');

--  total revenue generated by property sales in a given year --
delimiter //
create procedure total_revenue(datee year)
begin 
select property_id,sum(amount) from transactions where year(date_time)=datee group by property_id;
end //
delimiter ;
call total_revenue(2024);

--  expensive property ----
delimiter //
create procedure expensive_price()
begin 
select p.Property_id,p.owner_id,p.agent_id,property_address,property_price,buyer_id,amount
 from property as p join transactions as t 
 on p.Property_id=t.Property_id
 order by amount desc limit 1;
end //
delimiter ;
call expensive_price();

-- property sold above estimated amount -----
delimiter //
create procedure property_soldAbove_estimated_amount()
begin 
select p.property_id,property_price,trans_id,amount from property as p 
join transactions as t on p.property_id=t.property_id
where amount>property_price ;
end //
delimiter ;
call property_soldAbove_estimated_amount();

-- calculate agent commision ----
delimiter //
create procedure agent_commission(in id int)
begin 
select p.property_id,p.owner_id,amount,p.agent_id,(amount*0.10) as commission from property as p join transactions as t
on p.property_id=t.property_id
where p.property_id=id;
end//
delimiter ;
call agent_commission(6);

-- list properties with range of amount -- 
delimiter //
create procedure range_of_amount(in mini int,in maxi int)
begin 
select * from property where property_price between  mini and maxi;
end //
delimiter ;
call range_of_amount(100000,300000);

-- total property owned by owner ----
delimiter //
create procedure total_property_of_owner(in id int,out a int)
begin 
select count(property_id) into a from property where owner_id=id;
end //
delimiter ;
call total_property_of_owner(27,@totalProperty);
select  @totalProperty;

-- total earing of owner --
delimiter //
create procedure total_earning_owner(in id int)
begin 
select sum(amount) as Total_Amount ,owner_id from transactions where owner_id=id group by owner_id;
end //
delimiter ;
call total_earning_owner(2); 


